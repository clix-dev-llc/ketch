---
# Source: dashboard/templates/crd.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: ingressroutes.traefik.containo.us

spec:
  group: traefik.containo.us
  version: v1alpha1
  names:
    kind: IngressRoute
    plural: ingressroutes
    singular: ingressroute
  scope: Namespaced
---
# Source: dashboard/templates/crd.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: middlewares.traefik.containo.us

spec:
  group: traefik.containo.us
  version: v1alpha1
  names:
    kind: Middleware
    plural: middlewares
    singular: middleware
  scope: Namespaced
---
# Source: dashboard/templates/crd.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: ingressroutetcps.traefik.containo.us

spec:
  group: traefik.containo.us
  version: v1alpha1
  names:
    kind: IngressRouteTCP
    plural: ingressroutetcps
    singular: ingressroutetcp
  scope: Namespaced
---
# Source: dashboard/templates/crd.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: ingressrouteudps.traefik.containo.us

spec:
  group: traefik.containo.us
  version: v1alpha1
  names:
    kind: IngressRouteUDP
    plural: ingressrouteudps
    singular: ingressrouteudp
  scope: Namespaced
---
# Source: dashboard/templates/crd.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: tlsoptions.traefik.containo.us

spec:
  group: traefik.containo.us
  version: v1alpha1
  names:
    kind: TLSOption
    plural: tlsoptions
    singular: tlsoption
  scope: Namespaced
---
# Source: dashboard/templates/crd.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: tlsstores.traefik.containo.us

spec:
  group: traefik.containo.us
  version: v1alpha1
  names:
    kind: TLSStore
    plural: tlsstores
    singular: tlsstore
  scope: Namespaced
---
# Source: dashboard/templates/crd.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: traefikservices.traefik.containo.us

spec:
  group: traefik.containo.us
  version: v1alpha1
  names:
    kind: TraefikService
    plural: traefikservices
    singular: traefikservice
  scope: Namespaced
---
# Source: dashboard/templates/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller

rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - traefik.containo.us
    resources:
      - middlewares
      - ingressroutes
      - traefikservices
      - ingressroutetcps
      - ingressrouteudps
      - tlsoptions
      - tlsstores
    verbs:
      - get
      - list
      - watch
---
# Source: dashboard/templates/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller

roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
  - kind: ServiceAccount
    name: traefik-ingress-controller
    namespace: default
---
# Source: dashboard/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: dashboard-web-3
    theketch.io/app-name: dashboard
    theketch.io/app-process: web
    theketch.io/app-deployment-version: "3"
    theketch.io/is-isolated-run: "false"
  name: dashboard-web-3
spec:
  type: ClusterIP
  ports:
    - name: http-default-1
      port: 9090
      protocol: TCP
      targetPort: 9090
  selector:
    theketch.io/app-name: dashboard
    theketch.io/app-process: web
    theketch.io/app-deployment-version: "3"
    theketch.io/is-isolated-run: "false"
---
# Source: dashboard/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: dashboard-worker-3
    theketch.io/app-name: dashboard
    theketch.io/app-process: worker
    theketch.io/app-deployment-version: "3"
    theketch.io/is-isolated-run: "false"
  name: dashboard-worker-3
spec:
  type: ClusterIP
  ports:
    - name: http-default-1
      port: 9090
      protocol: TCP
      targetPort: 9090
  selector:
    theketch.io/app-name: dashboard
    theketch.io/app-process: worker
    theketch.io/app-deployment-version: "3"
    theketch.io/is-isolated-run: "false"
---
# Source: dashboard/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dashboard-web-3
    theketch.io/app-name: dashboard
    theketch.io/app-process: web
    theketch.io/app-process-replicas: "3"
    theketch.io/app-deployment-version: "3"
    theketch.io/is-isolated-run: "false"
  name: dashboard-web-3
spec:
  replicas: 3
  selector:
    matchLabels:
      app: dashboard-web-3
      theketch.io/app-name: dashboard
      theketch.io/app-process: web
      theketch.io/app-deployment-version: "3"
      theketch.io/is-isolated-run: "false"
  template:
    metadata:
      labels:
        app: dashboard-web-3
        theketch.io/app-name: dashboard
        theketch.io/app-process: web
        theketch.io/app-deployment-version: "3"
        theketch.io/is-isolated-run: "false"
    spec:
      containers:
        - name: dashboard-web-3
          command: ["/bin/sh","-lc","exec python"]
          env:
            - name: port
              value: "9090"
            - name: PORT
              value: "9090"
            - name: PORT_web
              value: "9090"
            - name: VAR
              value: VALUE
          image: shipasoftware/go-app:v1
          ports:
          - containerPort: 9090
---
# Source: dashboard/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dashboard-worker-3
    theketch.io/app-name: dashboard
    theketch.io/app-process: worker
    theketch.io/app-process-replicas: "1"
    theketch.io/app-deployment-version: "3"
    theketch.io/is-isolated-run: "false"
  name: dashboard-worker-3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dashboard-worker-3
      theketch.io/app-name: dashboard
      theketch.io/app-process: worker
      theketch.io/app-deployment-version: "3"
      theketch.io/is-isolated-run: "false"
  template:
    metadata:
      labels:
        app: dashboard-worker-3
        theketch.io/app-name: dashboard
        theketch.io/app-process: worker
        theketch.io/app-deployment-version: "3"
        theketch.io/is-isolated-run: "false"
    spec:
      containers:
        - name: dashboard-worker-3
          command: ["/bin/sh","-lc","exec celery"]
          env:
            - name: port
              value: "9090"
            - name: PORT
              value: "9090"
            - name: PORT_worker
              value: "9090"
            - name: VAR
              value: VALUE
          image: shipasoftware/go-app:v1
          ports:
          - containerPort: 9090
---
# Source: dashboard/templates/ingressroute.yaml
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: dashboard-ingressroute
  annotations:
    kubernetes.io/ingress.class: ingress-class
    cert-manager.io/cluster-issuer: letsencrypt-production
  labels:
    theketch.io/app-name: dashboard
spec:
  entryPoints:
    - web
    - websecure
  routes:
  - match: Host("dashboard.10.10.10.10.shipa.cloud")
    kind: Rule
    services:
    - name: dashboard-web-3
      port: 9090
      weight: 100
  - match: Host("theketch.io")
    kind: Rule
    services:
    - name: dashboard-web-3
      port: 9090
      weight: 100
  - match: Host("app.theketch.io")
    kind: Rule
    services:
    - name: dashboard-web-3
      port: 9090
      weight: 100
  tls: 
    secretName: dashboard-cname-7698da46d42bea3603f2 
    secretName: dashboard-cname-1aacb41a573151295624